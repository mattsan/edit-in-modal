%table.table
  %thead
    %tr
      %th ボード名
      %th
      %th
  %tbody
    - @boards.each do |board|
      %tr
        %td= board.name
        %td
          %button.btn.btn-default
            編集
        %td
          %button.btn.btn-default{data: {toggle: 'modal', target: '#article-edit', board_id: board.id, url: board_articles_path(board, format: :json)}}
            記事を編集

.modal.fade#article-edit{role: 'dialog'}
  .modal-dialog{role: 'document'}
    .modal-content
      .modal-header
        %button.close{data: {dismiss: 'modal'}, aria: {label: 'Close'}}
          %span{aria: {hidden: true}}
            &times;
        %h4 EDIT ARTICES
      .modal-body
        = form_for Article.new, class: 'form-horizontal' do |f|
          .row.form-group
            %input#article_board_id{type: 'hidden'}
            .col-sm-3
              %label.control-label 記事選択
            .col-sm-9
              %select.form-control#article-picker
          .row.form-group
            .col-sm-3
              = f.label :title, class: 'control-label'
            .col-sm-9
              = f.text_field :title, class: 'form-control'
          .row.form-group
            .col-sm-3
              = f.label :author, class: 'control-label'
            .col-sm-9
              = f.text_field :author, class: 'form-control'
          .row.form-group
            .col-sm-3
              = f.label :body, class: 'control-label'
            .col-sm-9
              = f.text_area :body, class: 'form-control'
      .modal-footer
        .pull-left
          %button.btn.btn-default#new-article{type: 'button'} NEW
          %button.btn.btn-primary#save-article{type: 'button'} SAVE
        %button.btn.btn-default{type: 'button', data: {dismiss: 'modal'}} CLOSE

:javascript
  var updateArticlePicker = function(url, article_id) {
    var picker = $('#article-picker');
    if(url) {
      picker.data('url', url);
    } else {
      url = picker.data('url');
    }
    $.get(url, function(articles) {
      picker.children().remove();
      for(var i in articles) {
        var option = $('<option>');
        option.val(articles[i].id);
        option.text(articles[i].title + ' by ' + articles[i].author);
        option.data(articles[i]);
        picker.append(option);
      }
      if(article_id) {
        picker.val(article_id);
      }
      picker.change();
    }).fail(function(xhr) {
      alert(xhr.status);
    });
  };

  $('#article-edit').on('show.bs.modal', function(event) {
    var target = $(event.relatedTarget);
    $('#article_board_id').val(target.data('boardId'));
    updateArticlePicker(target.data('url'));
  });

  $('#article-picker').on('change', function(event) {
    $(this).children(':not(:selected)[value=new]').remove();
    var option = $(this).children(':selected');
    $('#article_title').val(option.data('title'));
    $('#article_author').val(option.data('author'));
    $('#article_body').val(option.data('body'));
  });

  $('#save-article').on('click', function(event) {
    var option = $('#article-picker').children(':selected');
    var params = {
      article: {
        title:    $('#article_title').val(),
        author:   $('#article_author').val(),
        body:     $('#article_body').val(),
        board_id: $('#article_board_id').val()
      },
      _method: option.val() == 'new' ? 'post' : 'put'
    };
    $.post('/articles/' + (option.val() == 'new' ? '' : option.val()), params, function(res) {
      updateArticlePicker(null, res.id);
    }).fail(function(xhr) {
      alert(xhr.status);
    });
  });

  $('#new-article').on('click', function(event) {
    var picker = $('#article-picker');
    var option = $('<option>');
    option.text('new article');
    option.val('new');
    picker.append(option);
    picker.val('new');
    picker.change();
  });
